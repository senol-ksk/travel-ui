name: Vercel development Deployment
env:
  #THIS IS PROJECT INFORMATION WHICH COMES FROM .VERCEL/PROJECT.JSON FILE.
  # THIS KEY VALUE STORE IN GITHUB ACTION.
  # GITHUB.COM > SETTINGS > SECRETS AND VARIABLES > ACTIONS > REPOSITORY SECRETS.
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
on:
  workflow_run:
    workflows: [CI for Pull Request]
    branches: [production]
    types:
      - completed

jobs:
  on-success:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      #INSTALL NODEJS & NPM ON VERCEL
      - uses: actions/checkout@v4
      - name: Install Node.js
        uses: actions/setup-node@v4

      - name: Install npm
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org/'
      #INSTALL DEPENDENCIES
      - name: Install dependencies
        run: npm install
      #INSTALL VERCEL CLI IN SERVER.
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      #SET ENVIRONMENT IN VERCEL.
      #CREATE ENVIRONMENT IN VERCEL & BUILD IN VERCEL.
      # GITHUB.COM > SETTINGS > SECRETS AND VARIABLES > ACTIONS > ENVRIONEMENT SECRETS.
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=development --token=${{ secrets.VERCEL_TOKEN }}
      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
  on-failure:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'failure' }}
    steps:
      - run: echo 'The triggering workflow failed'
